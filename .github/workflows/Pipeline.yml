name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Linting
        run: |
          flake8 .
      
      - name: Run Tests with Coverage
        env:
          CI: true
          SECRET_KEY: "something"
          DEBUG: ${{ secrets.DEBUG }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        run: |
          coverage run -m pytest
          coverage report --fail-under=80
          coverage html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: ./htmlcov

  containerize:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/QA'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          docker build -t oc-lettings-site:${{ github.sha }} .
          docker tag oc-lettings-site:${{ github.sha }} cuteslime/oc-lettings-site:${{ github.sha }}
      
      - name: Push Docker image to Docker Hub
        run: |
          docker push cuteslime/oc-lettings-site:${{ github.sha }}
